### Starting build.
# Target: main.mli.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(csv), package(ounit2), package(unix), debug, extension:mli, file:main.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package unix -package ounit2 -package ANSITerminal -package csv -package bisect_ppx -modules main.mli > main.mli.depends # cached
# Target: main.cmi, tags: { package(ANSITerminal), package(bisect_ppx), package(csv), package(ounit2), package(unix), byte, compile, debug, extension:mli, file:main.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package unix -package ounit2 -package ANSITerminal -package csv -package bisect_ppx -o main.cmi main.mli # cached
# Target: main.ml.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(csv), package(ounit2), package(unix), debug, extension:ml, file:main.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package unix -package ounit2 -package ANSITerminal -package csv -package bisect_ppx -modules main.ml > main.ml.depends # cached
# Target: command.mli.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(csv), package(ounit2), package(unix), debug, extension:mli, file:command.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package unix -package ounit2 -package ANSITerminal -package csv -package bisect_ppx -modules command.mli > command.mli.depends # cached
# Target: command.cmi, tags: { package(ANSITerminal), package(bisect_ppx), package(csv), package(ounit2), package(unix), byte, compile, debug, extension:mli, file:command.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package unix -package ounit2 -package ANSITerminal -package csv -package bisect_ppx -o command.cmi command.mli # cached
# Target: highscores.mli.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(csv), package(ounit2), package(unix), debug, extension:mli, file:highscores.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package unix -package ounit2 -package ANSITerminal -package csv -package bisect_ppx -modules highscores.mli > highscores.mli.depends # cached
# Target: highscores.cmi, tags: { package(ANSITerminal), package(bisect_ppx), package(csv), package(ounit2), package(unix), byte, compile, debug, extension:mli, file:highscores.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package unix -package ounit2 -package ANSITerminal -package csv -package bisect_ppx -o highscores.cmi highscores.mli # cached
# Target: maze.mli.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(csv), package(ounit2), package(unix), debug, extension:mli, file:maze.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package unix -package ounit2 -package ANSITerminal -package csv -package bisect_ppx -modules maze.mli > maze.mli.depends # cached
# Target: maze.cmi, tags: { package(ANSITerminal), package(bisect_ppx), package(csv), package(ounit2), package(unix), byte, compile, debug, extension:mli, file:maze.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package unix -package ounit2 -package ANSITerminal -package csv -package bisect_ppx -o maze.cmi maze.mli # cached
# Target: state.mli.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(csv), package(ounit2), package(unix), debug, extension:mli, file:state.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package unix -package ounit2 -package ANSITerminal -package csv -package bisect_ppx -modules state.mli > state.mli.depends # cached
# Target: ghost.mli.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(csv), package(ounit2), package(unix), debug, extension:mli, file:ghost.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package unix -package ounit2 -package ANSITerminal -package csv -package bisect_ppx -modules ghost.mli > ghost.mli.depends # cached
# Target: pacman.mli.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(csv), package(ounit2), package(unix), debug, extension:mli, file:pacman.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package unix -package ounit2 -package ANSITerminal -package csv -package bisect_ppx -modules pacman.mli > pacman.mli.depends # cached
# Target: pacman.cmi, tags: { package(ANSITerminal), package(bisect_ppx), package(csv), package(ounit2), package(unix), byte, compile, debug, extension:mli, file:pacman.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package unix -package ounit2 -package ANSITerminal -package csv -package bisect_ppx -o pacman.cmi pacman.mli # cached
# Target: ghost.cmi, tags: { package(ANSITerminal), package(bisect_ppx), package(csv), package(ounit2), package(unix), byte, compile, debug, extension:mli, file:ghost.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package unix -package ounit2 -package ANSITerminal -package csv -package bisect_ppx -o ghost.cmi ghost.mli # cached
# Target: state.cmi, tags: { package(ANSITerminal), package(bisect_ppx), package(csv), package(ounit2), package(unix), byte, compile, debug, extension:mli, file:state.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package unix -package ounit2 -package ANSITerminal -package csv -package bisect_ppx -o state.cmi state.mli # cached
# Target: main.cmo, tags: { package(ANSITerminal), package(bisect_ppx), package(csv), package(ounit2), package(unix), byte, compile, debug, extension:cmo, extension:ml, file:main.cmo, file:main.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package unix -package ounit2 -package ANSITerminal -package csv -package bisect_ppx -o main.cmo main.ml # cached
# Target: command.ml.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(csv), package(ounit2), package(unix), coverage, debug, extension:ml, file:command.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package unix -package ounit2 -package ANSITerminal -package csv -package bisect_ppx -modules command.ml > command.ml.depends # cached
# Target: command.cmo, tags: { package(ANSITerminal), package(bisect_ppx), package(csv), package(ounit2), package(unix), byte, compile, coverage, debug, extension:cmo, extension:ml, file:command.cmo, file:command.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package unix -package ounit2 -package ANSITerminal -package csv -package bisect_ppx -o command.cmo command.ml # cached
# Target: highscores.ml.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(csv), package(ounit2), package(unix), debug, extension:ml, file:highscores.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package unix -package ounit2 -package ANSITerminal -package csv -package bisect_ppx -modules highscores.ml > highscores.ml.depends # cached
# Target: highscores.cmo, tags: { package(ANSITerminal), package(bisect_ppx), package(csv), package(ounit2), package(unix), byte, compile, debug, extension:cmo, extension:ml, file:highscores.cmo, file:highscores.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package unix -package ounit2 -package ANSITerminal -package csv -package bisect_ppx -o highscores.cmo highscores.ml # cached
# Target: maze.ml.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(csv), package(ounit2), package(unix), coverage, debug, extension:ml, file:maze.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package unix -package ounit2 -package ANSITerminal -package csv -package bisect_ppx -modules maze.ml > maze.ml.depends # cached
# Target: maze.cmo, tags: { package(ANSITerminal), package(bisect_ppx), package(csv), package(ounit2), package(unix), byte, compile, coverage, debug, extension:cmo, extension:ml, file:maze.cmo, file:maze.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package unix -package ounit2 -package ANSITerminal -package csv -package bisect_ppx -o maze.cmo maze.ml # cached
# Target: state.ml.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(csv), package(ounit2), package(unix), coverage, debug, extension:ml, file:state.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package unix -package ounit2 -package ANSITerminal -package csv -package bisect_ppx -modules state.ml > state.ml.depends # cached
# Target: state.cmo, tags: { package(ANSITerminal), package(bisect_ppx), package(csv), package(ounit2), package(unix), byte, compile, coverage, debug, extension:cmo, extension:ml, file:state.cmo, file:state.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package unix -package ounit2 -package ANSITerminal -package csv -package bisect_ppx -o state.cmo state.ml # cached
# Target: ghost.ml.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(csv), package(ounit2), package(unix), coverage, debug, extension:ml, file:ghost.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package unix -package ounit2 -package ANSITerminal -package csv -package bisect_ppx -modules ghost.ml > ghost.ml.depends # cached
# Target: ghost.cmo, tags: { package(ANSITerminal), package(bisect_ppx), package(csv), package(ounit2), package(unix), byte, compile, coverage, debug, extension:cmo, extension:ml, file:ghost.cmo, file:ghost.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package unix -package ounit2 -package ANSITerminal -package csv -package bisect_ppx -o ghost.cmo ghost.ml # cached
# Target: pacman.ml.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(csv), package(ounit2), package(unix), coverage, debug, extension:ml, file:pacman.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package unix -package ounit2 -package ANSITerminal -package csv -package bisect_ppx -modules pacman.ml > pacman.ml.depends # cached
# Target: pacman.cmo, tags: { package(ANSITerminal), package(bisect_ppx), package(csv), package(ounit2), package(unix), byte, compile, coverage, debug, extension:cmo, extension:ml, file:pacman.cmo, file:pacman.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package unix -package ounit2 -package ANSITerminal -package csv -package bisect_ppx -o pacman.cmo pacman.ml # cached
# Target: main.byte, tags: { package(ANSITerminal), package(bisect_ppx), package(csv), package(ounit2), package(unix), byte, debug, dont_link_with, extension:byte, file:main.byte, link, ocaml, program, quiet, traverse }
ocamlfind ocamlc -linkpkg -g -package unix -package ounit2 -package ANSITerminal -package csv -package bisect_ppx command.cmo highscores.cmo maze.cmo pacman.cmo ghost.cmo state.cmo main.cmo -o main.byte # cached
# Compilation successful.
